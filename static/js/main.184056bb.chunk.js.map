{"version":3,"sources":["components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Form/Form.module.css","components/UI/Input/Input.module.css","App.module.css","actions/actionTypes.js","utilities/index.js","reducers/index.js","reducers/reducer_contacts.js","actions/index.js","configureStore.js","components/UI/Button/index.js","components/UI/Backdrop/index.js","components/UI/Modal/index.js","components/UI/Form/index.js","components/UI/Input/index.js","components/ContactForm.js","containers/Contacts.js","App.js","serviceWorker.js","index.js","components/UI/Button/Button.module.css"],"names":["module","exports","Modal","Backdrop","form","input","textCenter","Container","Item","disabled","formItem","NameField","errorInput","FETCH_CONTACTS","ADD_CONTACT","UPDATE_CONTACT","UPDATE_CONTACT_ORDER","updateObject","oldObject","updatedProperties","Object","objectSpread","rootReducer","combineReducers","contacts","state","arguments","length","undefined","action","type","types","payload","newState","contactId","orderId","keys","newid","Number","defineProperty","id","formReducer","addContact","data","updateContactOrder","updateContact","Button","props","classNames","classes","concat","toConsumableArray","react_default","a","createElement","assign","className","join","children","index","show","onClick","clicked","modalClosed","style","transform","opacity","Form","Input","renderField","_ref","label","_ref$meta","meta","touched","error","UI_Input","reduxForm","validate","values","errors","firstName","lastName","email","test","phone","handleSubmit","invalid","UI_Form","onSubmit","Field","name","component","UI_Button","disabledButton","Contacts","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modal","draggable","setDraggable","bind","assertThisInitialized","handleDragEnter","handleClose","handleShow","handleContactClick","key","setState","e","array","order","getOrder","initialOrder","map","item","newOrder","indexOf","ret","newArray","slice","splice","insertItem","filter","reduce","el","initializeContact","_this2","contact","onDrag","onDragEnd","onDragEnter","UI_Modal","components_ContactForm","Component","connect","dispatch","bindActionCreators","initialize","store","createStore","subscribe","localStorage","setItem","JSON","stringify","getState","getItem","parse","configureStore","App","HashRouter","es","Switch","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","submit-button","button-text","disabled-button"],"mappings":"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","file":"static/js/main.184056bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-Pdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3HTn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2g_gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__qwsWn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"App_textCenter__2B8ED\",\"Container\":\"App_Container__1pHn2\",\"Item\":\"App_Item__9Lln0\",\"disabled\":\"App_disabled__jUD1J\",\"formItem\":\"App_formItem__P6kmi\",\"NameField\":\"App_NameField__iVtOB\",\"errorInput\":\"App_errorInput__3FQW6\"};","export const FETCH_CONTACTS = 'FETCH_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const UPDATE_CONTACT_ORDER = 'UPDATE_CONTACT_ORDER';\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const insertItem = (array, action) => {\n    let newArray = array.slice();\n    newArray.splice(action.index, 0, action.item);\n    return newArray;\n};\n\nexport const removeItem = (array, action) => {\n    return array.filter((item, index) => index !== action.index);\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport ContactReducer from './reducer_contacts';\n\nconst rootReducer = combineReducers({\n    contacts: ContactReducer,\n    form: formReducer\n});\n\nexport default rootReducer;\n","import * as types from '../actions/actionTypes';\nimport {updateObject} from \"../utilities\";\n\nexport default function(state = {}, action) {\n    switch (action.type) {\n        case types.FETCH_CONTACTS:\n            return {...action.payload};\n        case types.UPDATE_CONTACT_ORDER:\n            let newState = {};\n            for(let contactId in action.payload) {\n                newState[contactId] = updateObject(state[contactId], {\n                    orderId: action.payload[contactId]\n                })\n            }\n            return newState;\n        case types.ADD_CONTACT:\n            let keys = Object.keys(state);\n            let newid = keys.length === 0 ? 1 : Number(keys[keys.length-1]) + 1;\n            return updateObject(state, {\n                [newid]: { ...action.payload, orderId: newid}\n            });\n        case types.UPDATE_CONTACT:\n            return updateObject(state, {\n                [action.payload.id]: action.payload\n            });\n        default:\n            return state;\n    }\n}\n","import * as types from \"./actionTypes\";\n\nexport function fetchContacts() {\n  return {\n    type: types.FETCH_CONTACTS,\n    payload: localStorage.getItem('contacts') ? JSON.parse(localStorage.getItem('contacts')) : []\n  }\n}\n\nexport function addContact(data) {\n  return {\n    type: types.ADD_CONTACT,\n    payload: data\n  };\n}\n\nexport function updateContactOrder(data) {\n    return {\n        type: types.UPDATE_CONTACT_ORDER,\n        payload: data\n    };\n}\n\nexport function updateContact(data) {\n    return {\n        type: types.UPDATE_CONTACT,\n        payload: data\n    };\n}\n\nexport function deleteContact(index) {\n  return {\n    type: types.DELETE_CONTACT,\n    payload: index\n  };\n}\n","import { createStore } from 'redux';\n\nimport rootReducer from './reducers';\nimport {fetchContacts} from \"./actions\";\n\nexport const configureStore = () => {\n    const store = createStore(rootReducer);\n\n    store.subscribe(function () {\n        localStorage.setItem('contacts', JSON.stringify(store.getState().contacts));\n    });\n\n    store.dispatch(fetchContacts());\n\n    return store;\n}","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n    const {disabled} = props;\n    let classNames = [classes[\"button-text\"]];\n    if(disabled) {\n        classNames = [...classNames, classes['disabled-button']];\n    }\n    return (\n        <button {...props} className={classes[\"submit-button\"]}>\n                <span className={classNames.join(\" \")}>\n                    {props.children}\n                </span>\n        </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst index = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}>{props.children}</div> : null\n);\n\nexport default index;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop';\n\nconst Modal = (props) => (\n    <div>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div\n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'scale(1)' : 'scale(0)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </div>\n);\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Form.module.css';\n\nconst Form = (props) => (\n    <form {...props} className={classes.form}>\n        {props.children}\n    </form>\n);\n\nexport default Form;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst Input = (props) => (\n    <input className={classes.input} {...props} />\n);\n\nexport default Input;\n","import React from 'react';\n\nimport {Field, reduxForm} from 'redux-form';\n\nimport Form from \"./UI/Form\";\nimport Input from \"./UI/Input\";\nimport Button from \"./UI/Button\";\n\nimport classes from \"../App.module.css\";\n\nconst validate = values => {\n    const errors = {};\n    if (!values.firstName) {\n        errors.firstName = 'Required';\n    }\n    if (!values.lastName) {\n        errors.lastName = 'Required';\n    }\n\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n    if (!values.phone) {\n        errors.phone = 'Required';\n    } else if (!/^\\d+$/g.test(values.phone)) {\n        errors.phone = 'Invalid phone number';\n    }\n    return errors;\n};\n\nconst renderField = ({input, label, type, meta: {touched, error}}) => (\n    <div>\n        <div className={classes.formItem}>\n            <label>{label}</label>\n            <Input {...input} type={type}/>\n        </div>\n        <div className={classes.errorInput}>\n            {touched && (error && <span>{error}</span>)}\n        </div>\n    </div>\n);\n\nconst ContactForm = props => {\n    const {handleSubmit, invalid} = props;\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Field name=\"firstName\" component={renderField} type=\"text\" label=\"First Name\"/>\n            <Field name=\"lastName\" component={renderField} type=\"text\" label=\"Last Name\"/>\n            <Field name=\"phone\" component={renderField} type=\"text\" label=\"Phone\"/>\n            <Field name=\"email\" component={renderField} type=\"email\" label=\"E-mail\"/>\n            <Button disabled={invalid} className={invalid ? classes.disabledButton : ''}>Save Contact</Button>\n        </Form>\n    )\n};\n\nexport default reduxForm({\n    form: 'contact',\n    validate,\n})(ContactForm);\n","import React, {Component} from 'react';\n\nimport {bindActionCreators} from \"redux\";\nimport {addContact, updateContact, updateContactOrder} from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {initialize} from 'redux-form';\n\nimport Button from \"../components/UI/Button/index\";\nimport Modal from \"../components/UI/Modal/index\";\nimport ContactForm from \"../components/ContactForm\";\n\nimport classes from '../App.module.css';\n\nimport {removeItem, insertItem, updateObject} from '../utilities'\n\nclass Contacts extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false,\n            draggable: null,\n        };\n\n        this.setDraggable = this.setDraggable.bind(this);\n        this.handleDragEnter = this.handleDragEnter.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleContactClick = this.handleContactClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    setDraggable(key) {\n        this.setState({\n            draggable: key\n        });\n    }\n\n    handleDragEnter(e, key) {\n        let order = this.getOrder(this.props.contacts);\n        let initialOrder = Object.keys(order).map(item => order[item]);\n        let newOrder = [...initialOrder];\n\n        newOrder = removeItem(newOrder, {index: newOrder.indexOf(this.state.draggable)});\n        newOrder = insertItem(newOrder, {\n            index: initialOrder.indexOf(key),\n            item: this.state.draggable\n        });\n\n        let ret = newOrder.reduce((state, item, index) => ({\n            ...state,\n            [item]: index + 1\n        }), {});\n\n        this.props.updateContactOrder(ret);\n    }\n\n    getOrder(contacts) {\n        return Object.keys(contacts).reduce((item, el) => ({...item, [contacts[el].orderId]: el}), {});\n    }\n\n    handleClose() {\n        this.setState({\n            modal: false\n        });\n    }\n\n    handleShow() {\n        this.props.initializeContact({});\n        this.setState({\n            modal: true\n        });\n    }\n\n    handleSubmit(values) {\n        if (values['id'] === undefined) {\n            this.props.addContact(values);\n        } else {\n            this.props.updateContact(values);\n        }\n        this.handleClose();\n    }\n\n    handleContactClick(key) {\n        this.setState({\n            modal: true\n        });\n        this.props.initializeContact(updateObject(this.props.contacts[key], {\n            id: key\n        }));\n    }\n\n    render() {\n        const order = this.getOrder(this.props.contacts);\n        return (\n            <div className={classes.textCenter}>\n                <div className={classes.Container}>\n                    {Object.keys(order).map(item => {\n                        let contact = this.props.contacts[order[item]];\n                        let disabled = this.state.draggable === order[item] ? classes.disabled : '';\n                        return (\n                            <div\n                                key={order[item]}\n                                draggable={true}\n                                className={[classes.Item, disabled].join(\" \")}\n                                onDrag={() => this.setDraggable(order[item])}\n                                onDragEnd={() => this.setDraggable(null)}\n                                onDragEnter={(e) => this.handleDragEnter(e, order[item])}\n                                onClick={() => this.handleContactClick(order[item])}\n                            >\n                                <div className={classes.NameField}>{contact.firstName} {contact.lastName}</div>\n                                <div>{contact.phone}</div>\n                                <div>{contact.email}</div>\n                            </div>\n                        );\n                    })}\n                </div>\n                <Button onClick={this.handleShow}>\n                    Add contact\n                </Button>\n                <Modal show={this.state.modal} modalClosed={this.handleClose}>\n                    <ContactForm onSubmit={this.handleSubmit}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        contacts: state.contacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        addContact,\n        updateContact,\n        updateContactOrder,\n        initializeContact: contact => initialize('contact', contact)\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React, { Component } from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\n\nimport {configureStore} from \"./configureStore\";\nimport Contacts from \"./containers/Contacts\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Provider store={store}>\n          <Switch>\n            <Route exact path='/' component={Contacts} />\n          </Switch>\n        </Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit-button\":\"Button_submit-button__3OdzW\",\"button-text\":\"Button_button-text__1PKfn\",\"disabled-button\":\"Button_disabled-button__3BfGZ\"};"],"sourceRoot":""}